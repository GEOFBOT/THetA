Copyright 2012, 2013, 2014 Brown University, Providence, RI.

                         All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose other than its incorporation into a
commercial product is hereby granted without fee, provided that the
above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation, and that the name of Brown University not be used in
advertising or publicity pertaining to distribution of the software
without specific, written prior permission.

BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY
PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY BE LIABLE FOR
ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
http://cs.brown.edu/people/braphael/software.html

README file for Tumor Heterogeneity Analysis (THetA)

Software that estimates tumor purity and clonal/subclonal copy number 
aberrations directly from high-throughput DNA sequencing data.

If you use this software in your research, please cite:

L. Oesper, A. Mahmoody, B.J. Raphael. (2013)  THetA: Inferring intra-tumor 
heterogeneity from high-throughput DNA sequencing data.  Genome Biology. 14:R80.

contact: layla@cs.brown.edu
	 braphael@cs.brown.edu

Beta Version: 0.53
Version date: March, 2014

WEBSITE:
http://compbio.cs.brown.edu/software/
http://compbio.cs.brown.edu/projects/theta/


1) SUMMARY========================================================================
This software is for estimating tumor purity (fraction of non-cancerous cells)
and clonal/subclonal copy number aberrations from high-throughput DNA 
sequencing data for a tumor normal pair.

This document contains the following sections:
1) SUMMARY
2) REQUIREMENTS
3) INSTALLATION/COMPILING
4) BASIC USAGE
5) COMPLETE EXAMPLE
6) OPTIONAL PARAMETERS
7) WHOLE-GENOME PREPROCESSING SCRIPTS
8) WHOLE-EXOME PREPROCESSING SCRIPTS


2) REQUIREMENTS===================================================================

Requirements to run:
1. Python 2.7 or higher
	a. numpy (tested with 1.6.2)
	b. scipy (tested with 0.10.1)
2. *nix OS
3. Java 1.6 (optional, for preprocessing script)
4. Matlab (optional, for visualization code)


Tested with: Python 2.7, Java 6, MATLAB R2011b

3) INSTALLATION==================================================================

(i) Obtain the most recent version of THetA:

	git clone https://github.com/raphael-group/THetA.git

(ii) Install the code.  Run the following command

	./install

     This will compile the Java and will create the following executables.

	bin/RunTHetA
	bin/runBICSeqToTHetA.jar	
	bin/plotResultsFromFile.m

4) BASIC USAGE ===================================================================
This section gives the basic instructions for running THetA.

1. Create an interval_count_file: 

The interval_count_file must contain one line per genomic interval.  Each line 
is tab delimited containing the following fields:

	1. interval ID (String) - an identifier for the interval
	2. chromosome number (Integer) - chromosome on which the interval 
	   occurs
	3. interval start coordinate (Integer) - starting position for the 
	   interval
	4. interval end coordinate (Integer) - ending position for the interval
	5. tumorCount (Integer) - number of reads contained within interval for 
	   tumor BAM
	6. normalCount (Integer) - number of reads contained within interval for 
	   normal BAM
	7. * upperBound (Integer) [Optional] - the maximum copy number to consider for the
		interval.
	8. * lowerBound (Integer) [Optional]- the minimum copy number to consider for the
		interval.

	The interval_count_file may contain an optional header line, starting with 
	a "#" symbol.

	ADDITIONAL NOTES for more than one tumor population: 
	After running for a single tumor population, THetA now produces a .bash
	script [prefix].RunN3.bash that can be run to consider more than one tumor 
	population. This is the recommended way to run THetA for multiple tumor 
	populations.  
 

	NOTE: See the section on PREPROCESSING SCRIPTS to see how to convert
		  BIC-Seq output into THetA input.


2. Run Main Code:

	* bin/RunTHetA interval_count_file [Options]

	NOTES: This script will consider both the case of a normal and one tumor 
		subpopulation as well as a normal and two tumor subpopulations, then
		choose the best solution.

	INPUT:
	* interval_count_file: input file with genomic intervals and read depth 
	  counts (format above)
	* [Options] - see later section on all optional parameters.

	OUTPUT:
	* results files: the set of all maximum likelihood solutions found.  
	  Each solution will be a single line in this file with fields:
		1. NLL (Double) - solution neg. log likelihood (w/o constants)
		2. mu  (Double,Double) - comma delimited list:  %normal, %tumor 
		3. C_2 (Integer: ... :Integer) - colon delimited list of 
		   inferred tumor interval copy numbers.  When multiple tumor
		   populations are inferred this list is in the form
		   (Integer,Integer: ... : Integer, Integer).
		4. p* (Double, ... ,Double) - comma delimted list of inferred 
		   multinomial parameter \widehat{C\mu}
		The chosen solution will be in a file with postfix ".BEST.results".
		THetA will also output the individual solutions for n=2 and n=3 in 
		in files ending in ".n3.results" and ".n3.results" respectively
	* results plots: if matlab is installed on your system, PDFs that visualize
	  the results will automatically be created.  
	* bounds files: a copy of the interval_count_file with additional 
	  columns for the upper and lower bounds used for the copy number
      estimate of each genomic interval for n=2 and n=3 (see example 
	  for details).

3. Visualize results:

We also provide a matlab script for creating visualization of results on your own.

	Run Visualization Code (in Matlab):

	* cd bin/
	* plotResultsFromFile('results_file', 'interval_count_file', 'genome_name', width, height)

	INPUT:
	* results_file (String): output from step 2 above (postfix .results).
	* interval_count_file (String): input file from step 1 (in sorted order).
	* genome_name (String): name of the genome (used for figure title).
	* width (Integer): width in inches of the pdf to output.
	* height (Integer) height in inches of the pdf to output.

	OUTPUT:
	* results_plot: pdf of all inferred cancer genomes along with purity
	
-------------------------------------------------------------------------------

		
5) COMPLETE EXAMPLE ==========================================================

	bin/RunTHetA example/PD4120a.intervals

Runs THetA for the case of normal and one tumor subpopulation, as well as normal and two tumor
subpopulations. By default, the algorithm uses a bound heuristic to set reasonable lower 
and upper bounds on the copy number considered for each interval. For this input,
the program will take ~5 minutes to complete using a single process and will produce
three files (or four if you have matlab installed): 

Results Files:
File 1: PD4120a.n2.results 
containing a single solution with 34.5% normal and 65.4% tumor, output in the following format
(only part of the output is written here as indicated by ...)

#NLL    mu      C       p*
12534652744.8   0.345525386958,0.654474613042	2:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:2:2:3:2:2:2:2:2:1:2:3:2:3:3: ...	4.97752475775e-06,1.75115814182e-05,0.000709237511777,0.000598878358733,0.00158303218873,0.0007845646391,4.17929289805e-05,0.000858662779858,0.00212827237416, ...

File 2: PD4120a.n3.results
containing a single solution wih 31.6% normal and two tumor subpopulations at 55.8%
and 12.4% each. 

#NLL    mu      C       p*
12533388199.9   0.316798996672,0.558861427378,0.124339575949    2,3:1,2:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1:1,1: ...	 5.29201137218e-06,1.87738182607e-05,0.000694756604183,0.000586650717035,0.00155071051586,0.0007685457345,4.09396188657e-05,0.000841130971172,0.00208481822083,0.000502870137658,0.000445582453407,0.000489368296792,0.000298445523978, ...

** Notice that only the tumor components of C are written.  It is assumed that the normal component contains all segments with the expected copy number. **

File 3: PD4120a.BEST.results
In this case, as indicated by command line output, the solution consisting of a normal 
and two tumor subpopulations is selected. PD4120a.BEST.results will contain a copy of
PD4120a.n3.results

Visualization Files:
a pdf visualization of the results from THetA, similar to those seen in the original publication.

File 1 (if matlab is installed): example/PD4120a.n2.results.pdf
File 2 (if matlab is installed): example/PD4120a.n3.results.pdf

Bounds Files:
File 1: example/PD4120a.n2.withBounds
containing information about the individual upper and lower bounds for all intervals
as set by the bounds heuristic.  Bounds set to a value of "X" indicate that the interval
was not used in the initial estimate phase:

#ID     chrm    start   end     tumorCount      normalCount     UpperBound      LowerBound
start_1_10001:end_1_564400      1       10001   564400  13751   2267    X       X
start_1_570001:end_1_804000     1       570001  804000  48047   11855   X       X
start_1_804001:end_1_4124300    1       804001  4124300 1758468 480140  X       X
start_1_4127501:end_1_6485000   1       4127501 6485000 1482531 405429  X       X
start_1_6485001:end_1_13122900  1       6485001 13122900        4008088 1071682 X       X
start_1_13165701:end_1_16891900 1       13165701        16891900        1972497 531135  X       X
start_1_16918201:end_1_16975300 1       16918201        16975300        98443   28293   X       X
start_1_16975301:end_1_20498000 1       16975301        20498000        2149097 581298  X       X
start_1_20498001:end_1_29426500 1       20498001        29426500        5413316 1440799 2       0
...				...	...		...		...	...	...	...

File 2: example/PD4120a.n3.withBounds

#ID     chrm    start   end     tumorCount      normalCount     UpperBound      LowerBound
start_1_10001:end_1_564400      1       10001   564400  13751   2267    X       X
start_1_570001:end_1_804000     1       570001  804000  48047   11855   X       X
start_1_804001:end_1_4124300    1       804001  4124300 1758468 480140  X       X
start_1_4127501:end_1_6485000   1       4127501 6485000 1482531 405429  X       X
start_1_6485001:end_1_13122900  1       6485001 13122900        4008088 1071682 X       X
start_1_13165701:end_1_16891900 1       13165701        16891900        1972497 531135  X       X
start_1_16918201:end_1_16975300 1       16918201        16975300        98443   28293   X       X
start_1_16975301:end_1_20498000 1       16975301        20498000        2149097 581298  X       X
start_1_20498001:end_1_29426500 1       20498001        29426500        5413316 1440799 X       X
start_1_29426501:end_1_31589400 1       29426501        31589400        1280677 347529  X       X
start_1_31590901:end_1_33465100 1       31590901        33465100        1162476 307938  X       X
start_1_33465101:end_1_35371600 1       33465101        35371600        1246168 338198  X       X
start_1_35371601:end_1_36569200 1       35371601        36569200        785215  206253  X       X
start_1_36569201:end_1_51348300 1       36569201        51348300        9600613 2573086 2       1
...				...	...		...		...	...	...	...

N = 3 Script:
File 1: example/PD4120a.RunN3.bash
a script that can be run to rerun analysis of n = 3 while considering a mixture of normal cells
and two distinct tumor populations. 

NOTES:
- example/ contains the example described above - created from real data:
 
 PD4120a.intervals: 
	
	a) tumor and normal read depths determined from BAM files described in: 
	Nik-Zainal, S. et al. (2012) The Life History of 21 Breast Cancers.  
	Cell, 149, 5:994-1007.
	
	b) genomic intervals determined by 
		(1) running the algorithm (with default parameter lambda = 2) described in:
		Xi, R. et al. (2011) Copy number variation detection in whole-genome
		sequencing data using the Bayesian information criterion. PNAS, 108,
		46:E1128-E1136.
		(2) Removal of all intervals less than 50 Kb in length.

6) OPTIONAL PARAMETERS=========================================================

There are a variety of optional parameters that can be passed to THetA 

-------------------------------------------------------------------------------

(1) --NUM_PROCESSES (Integer) -- The number of processes to use for computation.
				    Using more processes increases memory usage, but can also 
					provide significant speed-ups.  

		Usage: bin/RunTHetA interval_count_file --NUM_PROCESSES 8

		Default: 1

-------------------------------------------------------------------------------

(2) --OUTPUT_PREFIX, -p (String) -- allows the user to specify a different prefix for 
					the output files.

		Usage: bin/RunTHetA interval_count_file --OUTPUT_PREFIX (-p) prefix

-------------------------------------------------------------------------------

(3) --DIRECTORY, -d (String) -- allows the user to specify a target directory for
					 output files
	
			
		Usage: bin/RunTHetA interval_count_file --DIR (-d) /path/to/directory
		
		Default : ./

-------------------------------------------------------------------------------

(4) --MAX_NORMAL, -m (Double) -- allows the user the change the maximum fraction of
					normal admixture in the sample. This is only enforced 
					for the case of N=2 (normal and one tumor)
		
		Usage: bin/RunTHetA interval_count_file --MAX_NORMAL (-m) 0.5

		Default: 0.5

-------------------------------------------------------------------------------
(5) --TAU, -t (Integer) -- the expected copy in the normal genome

		Usage: bin/RunTHetA interval_count_file --TAU (-t) 2

		Default: 2

-------------------------------------------------------------------------------

(6) --MAX_K, -k (Integer) -- the maximum copy number to consider in the genome

		Usage: bin/RunTHetA interval_count_file --MAX_K (-k) 3

		Default: 3

		NOTE: Use of BOUND_HEURISTIC may allow copy numbers greater than
			  MAX_K when read depth strongly support that case.

-------------------------------------------------------------------------------

(7) --BOUND_HEURISTIC (Double) --  allows user to decide if to use bound heuristic
					for setting lower and upper bounds on the copy number
					considered for each interval. 
		
		Usage: bin/RunTHetA interval_count_file --BOUND_HEURISTIC 0.5

		Default: 0.5

-------------------------------------------------------------------------------

(8) --NORMAL_BOUND_HEURISTIC (Integer) -- allows a user to set a different value
					for the expected copy number in a tumor. When this 
					parameter is supplied, the lower and upper bounds
					for the copy numbers tested for each interval depend 
					on the values set for the parameters HEURISTIC_LB and 
					HEURISTIC_UB.  See those parameters for more details. 

		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2

		Default: Not applied

-------------------------------------------------------------------------------

(9) --HEURISTIC_LB (Double) -- Only applies if the NORMAL_BOUND_HEURISTIC has been
					supplied.  All intervals with tumor/normal read 
					depth ratio less than HEURISTIC_LB will have lower
					bound of 0 and upper bound of NORMAL_BOUND_HEURISTIC.
					All intervals with tumor/normal read depth ratio 
					greater than HEURISTIC_LB but less than HEURISTIC_UB
					will be give an copy number of NORMAL_BOUND_HEURISTIC.
					All intervals with tumor/normal read depth ratio
					greater than HEURISTIC_UB will have a lower bound of
					HEURISTIC_UB and an upper bound of MAX_K.

		
		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2 --HEURISTIC_LB 0.85

		Default: 0.9 (when NORMAL_BOUND_HEURISTIC is supplied)

-------------------------------------------------------------------------------

(10) --HEURISTIC_UB (Double) -- Only applies if the NORMAL_BOUND_HEURISTIC has been
					 supplied.  All intervals with tumor/normal read 
					 depth ratio less than HEURISTIC_LB will have lower
					 bound of 0 and upper bound of NORMAL_BOUND_HEURISTIC.
					 All intervals with tumor/normal read depth ratio 
					 greater than HEURISTIC_LB but less than HEURISTIC_UB
					 will be give an copy number of NORMAL_BOUND_HEURISTIC.
					 All intervals with tumor/normal read depth ratio
					 greater than HEURISTIC_UB will have a lower bound of
					 HEURISTIC_UB and an upper bound of MAX_K.


		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2 --HEURISTIC_UB 1.2

		Default: 1.1 (when NORMAL_BOUND_HEURISTIC is supplied)

-------------------------------------------------------------------------------
(11) --NO_MULTI_EVENT (Boolean Flag) -- Prohibits multiple distinct copy number events
					to be predicted for a single interval.
					If set, a perfect phylogeny assumption
					is made for all copy number events over 
					all tumor populations.

		Usage: bin/RunTHetA interval_count_file --NO_MULTI_EVENT

		Default: False

-------------------------------------------------------------------------------

(12) --NO_INTERVAL_SELECTION (Boolean Flag) -- Turns off automatic interval selection
						for determining which intervals should
						be used in the optimization procedure.
						When set to TRUE all supplied intervals
						are used.  WARNING - this may result in
						very long run-times.

		Usage: bin/RunTHetA interval_count_file --NO_INTERVAL_SELECTION

		Default: False

------------------------------------------------------------------------------

Advanced Options: The following options should only be used when running THetA 
directly from the python file, instead of the provided bash script. The python
file only runs theta for one value of N (number of tumor populations) and doesn't
incorportate model selection. 

(13) --N, -n (Integer) -- the number of subpopulations to consider. 2 for mixture of 
				normal and one tumor population. 3 for mixture of normal and 
				two tumor populations and requires the use of either
				the --RESULTS flag or the --NO_INTERVAL_SELECTION
				flag.

		Usage: python/RunTHetA.py interval_count_file --N (-n) 2

		Default: 2

		NOTE: If you want to run for a value of 3, first running with
		      a value of 2 (the default) will now output a bash script
		      of the name [prefix].RunN3.bash that can be run to 
		      automatically do analysis with a value of 3 (or multiple
		      tumor populations).

-------------------------------------------------------------------------------

(14) --BOUNDS_ONLY (Boolean Flag) -- Calculates the bounds with the specified 
					heuristic values and writes out a .withBounds file without 
					running the rest of the program. 

		Usage: python/RunTHetA.py interval_count_file --BOUNDS_ONLY

github raphael-group theta		Default: False

-------------------------------------------------------------------------------

(15) --NUM_INTERVALS (Integer) -- Changes the maximum number of intervals used 
			in the high confidence step of the two step processes. 

		Usage: python/RunTHetA.py interval_count_file --NUM_INTERVALS 50

		Defualt: 100 for n=2, 20 for n=3

------------------------------------------------------------------------------

(16) --RESULTS (String) -- A results file output from a run with one tumor population
			   (-n 2 or --N 2).  Either the --RESULTS or 
			   --NO_INTERVAL_SELECTION flag is required when considering 
			   multiple tumor populations (-n 3 or --N 3).

		Usage: python/RunTHetA.py interval_count_file -n 3 --RESULTS result_file

		Default: No default. Required for multiple tumor populations (-n 3 or --N 3).

------------------------------------------------------------------------------

7) WHOLE-GENOME PREPROCESSING SCRIPTS==============================================

While THetA can be used with any segmentation algorithm applied to whole-genome data,
we provide code to convert BIC-Seq output (from their perl pipeline) into the 
appropriate input for THetA since that is what we use in the results presented
in our paper.  With the latest version of THetA, we suggest running BIC-Seq
with the *default* parameters (i.e. lambda=2).

BIC-Seq can be obtained from: http://compbio.med.harvard.edu/Supplements/PNAS11.html

--------------------------------------------------------------------------------

Run Code:

	* java -jar bin/runBICSeqToTHetA.jar file.bicseg [Options]


INPUT:
	file.bicseg: A file output by a run of BIC-Seq

OUTPUT:
	interval_count_file: A file used as input to THetA.  See the section on
			     Basic Usage for a more detailed description.

OPTIONS:

-------------------------------------------------------------------------------

(1) OUTPUT_PREFIX (String) -- allows the user to specify a different prefix for 
							  the output files.

		Usage: java -jar bin/runBICToTHetA.jar file.bicseg -OUTPUT_PREFIX /the/path/to/save/to/prefix

		Default: file.bicsgithub raphael-group thetaeg

-------------------------------------------------------------------------------

(2) MIN_LENGTH (Integer) -- allows the user to specify a lower bound on the 
							length of intervals being converted from BIC Seq
							into THetA's format.

		Usage: java -jar bin/runBICToTHetA.jar file.bicseg -MIN_LENGTH 50000

		Default: 0

-------------------------------------------------------------------------------

8) WHOLE-EXOME PREPROCESSING SCRIPTS==========================================

The most recent THetA release works with Exome data.  Once you have created
input data for THetA for whole-exome data, there is no difference in how you
run the algorithm.  We include here a script that can be used with any algorithm
that segments (and predicts copy numbers) from whole-exome data to create THetA
input.  In particular, we provide specific support for segmentations determined
from running ExomeCNV and EXCAVATOR.

ExomeCNV can be obtained from here:
https://secure.genome.ucla.edu/index.php/ExomeCNV_User_Guide

EXCAVATOR can be obtained from here:
http://sourceforge.net/projects/excavatortool/

-------------------------------------------------------------------------------
REQUIREMENTS:

        This script requires:
        (1) samtools (http://samtools.sourceforge.net/)
        (2) python (2.7 or higher)
        (3) *nix OS
--------------------------------------------------------------------------------

Run Code:

        * bash bin/CreateExomeInput -s segment_file -t tumor_bam -n normal_bam --FA fasta_file --EXON_FILE exon_bed_file [Options}

        INPUT:
        * segment_file: Tab delimited file with a set of intervals of the reference
                        genome returned by running an exome segmenter/copy number program.
                        This file has the the following columns:
                        (1) chrm
                        (2) start
                        (3) end

                Note: If using ExomeCNV this file is: FILE_NAME.segment.copynumber.txt
                      If using EXCAVATOR this file is: FastCallResults_FILE_NAME.txt

        * tumor_bam: the tumor bam file (should be indexed and sorted)
        * normal_bam: the matched normal bam file (should be indexed and sorted)
        * fasta_file: reference genome file used in mapping the raw reads
        * exon_bed_file: bed file of all exons (data/ contains bed files for hg18 and hg19)
                data/hg18.exons.bed
                data/hg19.exons.bed

        * [Options] - see later section on all optional parameters.


        OUTPUT:
        * theta_input: a file that is properly formatted as input to the THetA algorithm

-------------------------------------------------------------------------------

OPTIONS:

There are several optional parameters.

-------------------------------------------------------------------------------

(1) --DIR (String) -- allows the user to specify a target directory for
                                output files.


                Usage: bin/CreateExomeInput -s segment_file -t tumor_bam -n normal_bam --FA fasta_file --EXON_FILE exon_bed_file --DIR /path/to/directory

                Default: ./

-------------------------------------------------------------------------------

(2) --OUTPUT_PREFIX (String) -- allows the user to specify a different prefix 
                                for the output files.


                Usage: bin/CreateExomeInput -s segment_file -t tumor_bam -n normal_bam --FA fasta_file --EXON_FILE exon_bed_file --OUTPUT_PREFIX prefix


-------------------------------------------------------------------------------

(3) --QUALITY (Integer) -- specify a minimum alignment quality to use

                Usage: bin/CreateExomeInput -s segment_file -t tumor_bam -n normal_bam --FA fasta_file --EXON_FILE exon_bed_file --QUALITY 30

                Default: 30

-------------------------------------------------------------------------------

(4) --EXCAVATOR (String) -- if running with EXCAVATOR segmentation, chromosome ends file 
                                (see data/ for hg18 and hg19) must be provided. This file
				contains the following columns:
				(1) chrm
				(2) chrm start
				(3) chrm end

                Usage: bin/CreateExomeInput -s segment_file -t tumor_bam -n normal_bam --FA fasta_file --EXON_FILE exon_bed_file --EXCAVATOR data/hg19.ends.txt

-----------------------------------------------------------------------------------

