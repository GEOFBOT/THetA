Copyright 2012, 2013 Brown University, Providence, RI.

                         All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose other than its incorporation into a
commercial product is hereby granted without fee, provided that the
above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation, and that the name of Brown University not be used in
advertising or publicity pertaining to distribution of the software
without specific, written prior permission.

BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY
PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY BE LIABLE FOR
ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
http://cs.brown.edu/people/braphael/software.html

README file for Tumor Heterogeneity Analysis (THetA)

Software that estimates tumor purity and clonal/subclonal copy number 
aberrations directly from high-throughput DNA sequencing data.

If you use this software in your research, please cite:

L. Oesper, A. Mahmoody, B.J. Raphael. (2013)  THetA: Inferring intra-tumor 
heterogeneity from high-throughput DNA sequencing data.  Genome Biology.
(In Press).

contact: layla@cs.brown.edu
	 braphael@cs.brown.edu

Beta Version: 0.52
Version date: January 15, 2014

WEBSITE:
http://cs.brown.edu/people/braphael/software.html
http://compbio.cs.brown.edu/projects/theta/


1) SUMMARY========================================================================
This software is for estimating tumor purity (fraction of non-cancerous cells)
and clonal/subclonal copy number aberrations from high-throughput DNA 
sequencing data for a tumor normal pair.

This document contains the following sections:
1) SUMMARY
2) REQUIREMENTS
3) INSTALLATION/COMPILING
4) BASIC USAGE
5) COMPLETE EXAMPLE
6) OPTIONAL PARAMETERS
7) OPTIONAL PREPROCSSING SCRIPTS


2) REQUIREMENTS===================================================================

Requirements to run:
1. Python 2.7 or higher
	a. numpy (tested with 1.6.2)
	b. scipy (tested with 0.10.1)

2. Java 1.6 (for preprocessing script)

2. Matlab (for visualization code)

3. *nix OS

Tested with: Python 2.7, Java 6, MATLAB R2011b

-------------------------------------------------------------------------------

Preprocessing Requirements:
While THetA can be used with any segmentation algorithm, we provide code to 
convert BIC-Seq output (from their perl pipeline) into the appropriate input for 
THetA since that is what we use in the results presented in our paper.  See
the OPTIONAL PREPROCESSING SCRIPTS section of this MANUAL for more detailed 
instructions.

BIC-Seq can be obtained from: http://compbio.med.harvard.edu/Supplements/PNAS11.html


3) INSTALLATION==================================================================

(i) Unpack all contents of the THetA_XXX.tar.gz

	tar -xvf THetA_XXX.tar.gz

(ii) Install the code.  Run the following command

	./install

     This will compile the Java code (mixture of normal and ONE tumor 
     population) and will create the following executables.

	bin/RunTHetA
	bin/runBICSeqToTHetA.jar	
	bin/plotResultsFromFile.m

4) BASIC USAGE ===================================================================
This section gives the basic instructions for running THetA.

1. Create an interval_count_file: 


The interval_count_file must contain one line per genomic interval.  Each line 
is tab delimited containing the following fields:

	1. interval ID (String) - an identifier for the interval
	2. chromosome number (Integer) - chromosome on which the interval 
	   occurs
	3. interval start coordinate (Integer) - starting position for the 
	   interval
	4. interval end coordinate (Integer) - ending position for the interval
	5. tumorCount (Integer) - number of reads contained within interval for 
	   tumor BAM
	6. normalCount (Integer) - number of reads contained within interval for 
	   normal BAM
	7. * upperBound (Integer) [Optional] - the maximum copy number to consider for the
		interval.
	8. * lowerBound (Integer) [Optional]- the minimum copy number to consider for the
		interval.

		* These parameters are not required, but are optional and may be 
		  supplied to decrease the runtime of the algorithm. They are
		  HIGHLY RECOMMENDED for the case of more than one tumor population 

	The interval_count_file may contain an optional header line, starting with 
	a "#" symbol.

	ADDITIONAL NOTES for more than one tumor population: 
	In addition to specifying lower and upper bounds on the the copy numbers
	for each interval, it is strongly recommended that only a subset ( <15 )
	intervals be considered when running with multiple tumor subpopulations
	due to runtime.

	One way to do this is to select a subset of intervals using the .withBounds
	file output by the Mixture of Normal and ONE tumor script which will
	include specific lower and upper bounds for each interval.  

	NOTE: See the section on PREPROCESSING SCRIPTS to see how to convert
		  BIC-Seq output into THetA input.


2. Run Main Code:

	* bin/RunTHetA interval_count_file [Options]

	INPUT:
	* interval_count_file: input file with genomic intervals and read depth 
	  counts (format above)
	* [Options] - see later section on all optional parameters.


	OUTPUT:
	* bounds_file: a copy of the interval_count_file with additional 
	  columns for the upper and lower bounds used for the copy number
          estimate of each genomic interval.
	* results_file: the set of all maximum likelihood solutions found.  
	  Each solution will be a single line in this file with fields:
		1. NLL (Double) - solution neg. log likelihood (w/o constants)
		2. mu  (Double,Double) - comma delimited list:  %normal, %tumor 
		3. C_2 (Integer: ... :Integer) - colon delimited list of 
		   inferred tumor interval copy numbers
		4. p* (Double, ... ,Double) - comma delimted list of inferred 
		   multinomial parameter \widehat{C\mu}


3. Visualize results:

We also provide a matlab script for visualization of results.

	Run Visualization Code (in Matlab):

	* cd bin/
	* plotResultsFromFile('results_file', 'interval_count_file', 'genome_name', width, height)

	INPUT:
	* results_file (String): output from step 2 above (postfix .results).
	* interval_count_file (String): input file from step 1 (in sorted order).
	* genome_name (String): name of the genome (used for figure title).
	* width (Integer): width in inches of the pdf to output.
	* height (Integer) height in inches of the pdf to output.

	OUTPUT:
	* results_plot: pdf of all inferred cancer genomes along with purity
	
-------------------------------------------------------------------------------

		
5) COMPLETE EXAMPLE ============= =============================================
(i) Normal and one tumor

	bin/RunTHetA example/PD4120a.intervals

Runs the efficient n=2 algorithm and generally considers a max copy number 
of 3 (default value).  By default, the algorithm uses a bound heuristic to set 
reasonable lower and upper bounds on the copy number considered for each 
interval. For this input, the program will take ~5 minutes to complete using
a single process  and will produce two files: 

File 1: example/PD4120a.results 

containing the following single solution with 34.3% normal and 65.7% tumor:

#NLL    mu      C_2     p*
8844567667.24	0.343272840672,0.656727159328	6:1:2:3:2:1:3:3:2:1:2:1:2:2:2:1:2:1:2:1:0:1:2:2:1:2:2:2:2:1:2:2:2:2:2:1:2:2:2:1:2:2:1:2:1:2:1:2:1:2:1:2:1:2:2:2:1:1:2:1:2:1:2:1:2:1:2:1:1	0.000373778844891,0.0272274719281,0.00179214376416,0.000924462121137,0.00372364748274,8.01132899565e-05,0.000487363358673,0.0530919156929,0.0495756917059,0.00557555876306,0.00861784230747,0.00031376245398,0.0274235587728,0.0788536176669,0.00095281905738,0.00207494907811,0.00347136304951,0.000183131022654,0.00604269908753,0.00859013319939,7.58334300289e-06,0.033617294745,0.0528304092272,0.0181023565922,0.000979744567555,0.0668386293433,0.0232884945431,0.0371211678461,0.0569498655453,0.00398462520895,0.0376363275606,0.0151787740335,0.0356425478145,0.051761356051,0.0517244371262,0.0263156486976,0.034916105942,0.0308130663151,0.0118515337515,0.0112590947721,0.00741174592486,0.0210606026984,4.36066201483e-05,0.00393906997842,4.392606639e-05,0.00886226251,0.000729921413404,0.000649796308509,0.000877590959023,0.00220077909841,0.000884149175644,0.00066221951353,8.39054259872e-05,0.00993968841789,0.0194524442334,0.0230984686029,0.000452826088405,0.000480832838398,0.00040963918533,7.28690735717e-05,0.000354962178897,0.000172049035062,0.00487925322476,0.000590273354288,0.000884399373551,0.00295279176666,0.000482589349889,0.00270206474157,0.00543018716944
and 

File 2: example/PD4102a.withBounds

containing information about the individual upper and lower bounds for all intervals
as set by the bounds heuristic.  The first few lines look like the following:

#ID     chrm    start   end     tumorCount      normalCount     UpperBound      LowerBound
start_1_10001:end_1_570000      1       10001   570000  1075438 73714   6       4
start_1_570001:end_1_106068800  1       570001  106068800       69021236        18495636        2       0
start_1_106068801:end_1_110651200       1       106068801       110651200       4411350 817653  2       0
start_1_110651201:end_1_112383500       1       110651201       112383500       2143221 317518  4       2
start_1_112383501:end_1_121485200       1       112383501       121485200       9176462 1698888 2       0

(ii) Normal and 2 tumor subpopulations

	bin/RunTHetA -n 3 example/sim_1.intervals

Runs the n=3 algorithm. For this input, the program will take ~2 minutes to 
complete using a single process and will produce two files:

File 1: example/sim_1.results
#NLL    mu      C       p*
260241832.625   0.357968429254,0.399810188555,0.242221382191    1,1:2,1:1,1:2,2:2,1:1,1:1,1:1,1:3,2:2,3:1,2:2,1       0.0674762141757,0.120329338815,0.0686176716875,0.135578065971,0.104730452879,0.0763374388574,0.0606065486584,0.0654017231171,0.0784305489811,0.0893775273897,0.0575228817513,0.0755915877174

File 2: example/sim_1.withBounds
#ID     chrm    start   end     tumorCount      normalCount     UpperBound      LowerBound
1       1       142600000       249250621       7447614 8818166 2       1
2       2       102700000       243199373       12855772        12148554        2       1
3       3       98300000        198022430       7124815 8967338 2       1
4       4       59500000        191154276       14684657        12030306        2       1
5       5       58900000        180915260       10999282        10573677        2       1
6       6       63400000        171115067       7985575 9976200 2       1
7       7       67000000        159138663       6371735 7920400 2       1
8       8       52200000        146364022       7049192 8547060 2       1
9       9       65900000        141213431       8486992 5799968 3       2
10      10      46100000        135534747       9208074 7074033 3       2
11      11      59900000        135006516       6233254 6379496 2       1
12      12      46400000        133851895       7907416 7631792 2       1

-------------------------------------------------------------------------------

If you then want to visualize these results you can run (at a matlab prompt):

>> cd bin
>> plotResultsFromFile('../example/PD4120a.results','../example/PD4120a.intervals','PD4120a',11,4)


This creates a pdf that visualizes the tumor genome by copy number and includes
purity information in the title.  See file example/example.pdf for what the
output should look like.


NOTES:
- example/ contains the example described above - created from real data:
 
 PD4120a.intervals: 
	
	a) tumor and normal read depths determined from BAM files described in: 
	Nik-Zainal, S. et al. (2012) The Life History of 21 Breast Cancers.  
	Cell, 149, 5:994-1007.
	
	b) genomic intervals determined by 
		(1) running the algorithm (with parameter lambda = 100) described in:
		Xi, R. et al. (2011) Copy number variation detection in whole-genome
		sequencing data using the Bayesian information criterion. PNAS, 108,
		46:E1128-E1136.
		(2) Removal of all intervals less than 50 Kb in length.

6) OPTIONAL PARAMETERS=========================================================

There are a variety of optional parameters that can be passed to THetA 

-------------------------------------------------------------------------------

(1) --N, -n (Integer) -- the number of subpopulations to consider. 2 for mixture of 
				normal and one tumor population. 3 for mixture of normal and 
				two tumor populations

		Usage: bin/RunTHetA interval_count_file --N (-n) 2

		Default: 2

-------------------------------------------------------------------------------

(2) --TAU, -t (Integer) -- the expected copy in the normal genome

		Usage: bin/RunTHetA interval_count_file --TAU (-t) 2

		Default: 2

-------------------------------------------------------------------------------

(3) --MAX_K, -k (Integer) -- the maximum copy number to consider in the genome

		Usage: bin/RunTHetA interval_count_file --MAX_K (-k) 3

		Default: 3

		NOTE: Use of BOUND_HEURISTIC may allow copy numbers greater than
			  MAX_K when read depth strongly support that case.

-------------------------------------------------------------------------------

(4) --OUTPUT_PREFIX, -p (String) -- allows the user to specify a different prefix for 
					the output files.

		Usage: bin/RunTHetA interval_count_file --OUTPUT_PREFIX (-p) prefix

-------------------------------------------------------------------------------

(5) --DIRECTORY, -d (String) -- allows the user to specify a target directory for
					 output files
	
			
		Usage: bin/RunTHetA interval_count_file --DIR (-d) /path/to/directory
		
		Default : ./

-------------------------------------------------------------------------------

(6) --MAX_NORMAL, -m (Double) -- allows the user the change the maximum fraction of
					normal admixture in the sample. This is only enforced 
					for the case of N=2 (normal and one tumor)
		
		Usage: bin/RunTHetA interval_count_file --MAX_NORMAL (-m) 0.5

		Default: 0.5

-------------------------------------------------------------------------------

(7) --BOUND_HEURISTIC (Double) --  allows user to decide if to use bound heuristic
					for setting lower and upper bounds on the copy number
					considered for each interval. 
		
		Usage: bin/RunTHetA interval_count_file --BOUND_HEURISTIC 0.5

		Default: 0.5

-------------------------------------------------------------------------------

(6) --NORMAL_BOUND_HEURISTIC (Integer) -- allows a user to set a different value
					for the expected copy number in a tumor. When this 
					parameter is supplied, the lower and upper bounds
					for the copy numbers tested for each interval depend 
					on the values set for the parameters HEURISTIC_LB and 
					HEURISTIC_UB.  See those parameters for more details. 

		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2

		Default: Not applied

-------------------------------------------------------------------------------

(7) --HEURISTIC_LB (Double) -- Only applies if the NORMAL_BOUND_HEURISTIC has been
					supplied.  All intervals with tumor/normal read 
					depth ratio less than HEURISTIC_LB will have lower
					bound of 0 and upper bound of NORMAL_BOUND_HEURISTIC.
					All intervals with tumor/normal read depth ratio 
					greater than HEURISTIC_LB but less than HEURISTIC_UB
					will be give an copy number of NORMAL_BOUND_HEURISTIC.
					All intervals with tumor/normal read depth ratio
					greater than HEURISTIC_UB will have a lower bound of
					HEURISTIC_UB and an upper bound of MAX_K.

		
		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2 --HEURISTIC_LB 0.85

		Default: 0.9 (when NORMAL_BOUND_HEURISTIC is supplied)

-------------------------------------------------------------------------------

(7) --HEURISTIC_UB (Double) -- Only applies if the NORMAL_BOUND_HEURISTIC has been
					 supplied.  All intervals with tumor/normal read 
					 depth ratio less than HEURISTIC_LB will have lower
					 bound of 0 and upper bound of NORMAL_BOUND_HEURISTIC.
					 All intervals with tumor/normal read depth ratio 
					 greater than HEURISTIC_LB but less than HEURISTIC_UB
					 will be give an copy number of NORMAL_BOUND_HEURISTIC.
					 All intervals with tumor/normal read depth ratio
					 greater than HEURISTIC_UB will have a lower bound of
					 HEURISTIC_UB and an upper bound of MAX_K.


		Usage: bin/RunTHetA interval_count_file --NORMAL_BOUND_HEURISTIC 2 --HEURISTIC_UB 1.2

		Default: 1.1 (when NORMAL_BOUND_HEURISTIC is supplied)

-------------------------------------------------------------------------------

(8) --NUM_PROCESSES (Integer) -- The number of processes to use for computation.
				    Using more processes increases memory usage, but can also 
					provide significant speed-ups.  

		Usage: bin/RunTHetA interval_count_file --NUM_PROCESSES 8

		Default: 1

-------------------------------------------------------------------------------

(9) --BOUNDS_ONLY (Boolean Flag) -- Calculates the bounds with the specified 
					heuristic values and writes out a .withBounds file without 
					running the rest of the program. 
					

		Usage: bin/RunTHetA interval_count_file --BOUNDS_ONLY

		Default: False

-------------------------------------------------------------------------------


7) OPTIONAL PREPROCESSING SCRIPTS==============================================

While THetA can be used with any segmentation algorithm, we provide code to 
convert BIC-Seq output (from their perl pipeline) into the 
appropriate input for THetA since that is what we use in the results presented
in our paper.  

BIC-Seq can be obtained from: http://compbio.med.harvard.edu/Supplements/PNAS11.html

--------------------------------------------------------------------------------

Run Code:

	* java -jar bin/runBICSeqToTHetA.jar file.bicseg [Options]


INPUT:
	file.bicseg: A file output by a run of BIC-Seq

OUTPUT:
	interval_count_file: A file used as input to THetA.  See the section on
						 Basic Usage for a more detailed description.

OPTIONS:

-------------------------------------------------------------------------------

(1) OUTPUT_PREFIX (String) -- allows the user to specify a different prefix for 
							  the output files.

		Usage: java -jar bin/runBICToTHetA.jar file.bicseg -OUTPUT_PREFIX /the/path/to/save/to/prefix

		Default: file.bicseg

-------------------------------------------------------------------------------

(2) MIN_LENGTH (Integer) -- allows the user to specify a lower bound on the 
							length of intervals being converted from BIC Seq
							into THetA's format.

		Usage: java -jar bin/runBICToTHetA.jar file.bicseg -MIN_LENGTH 50000

		Default: 0

-------------------------------------------------------------------------------

